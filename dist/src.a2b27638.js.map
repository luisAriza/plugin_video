{"version":3,"sources":["src/app/MediaPlayer.js","src/app/plugins/AutoPlay.js","src/app/plugins/AutoPause.js","src/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMoB,GFAGpB,ACAAmB,MCAT,CAAgB,CDAhB,GDAA,ACAoB,CDAClB,ACAC,MDAtB,EAA6B;EAC3B,AEAAoB,KFAKnB,KAAL,CEAW,EFAED,CEAC,KFAK,CAACE,EAApB;ACAFgB,EDCE,EEAE,GFAGf,CCDC,CCCCkB,ADDAhB,KDCP,GAAeL,CEAb,ADDJ,CAAmBa,ECCE,CDDrB,CDCuB,CAACV,CEApB,ADDqB,MDCR,IAAkB,ACDDG,EDChC,ICDuB,EAAiB;AEG1C,EFFE,ECCE,EDDE,AEEA6B,CFFC7B,ECCEgB,ECCE,EFFE,CAACb,AEEAmB,KFFZ,EAAmB,CEEC,CAACQ,IDDnB,GAA0B,KAAKd,CCCrB,CAAuB,OAAvB,CAAd,QDD8B,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;ACEJ,EHDE,EEAE,ADDAjB,EEEEA,CHDCF,EEAEoB,CDDC,CAACf,CEEC,GAAG,CFFX,GDCF,ACDiB,AEEAV,IFFf,QCCA,GAA8B,KAAKyB,ACCxB,CAAgB,qBDDG,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFCH,EEAE,ADDA,AEEDrB,EAAE,EAAEiC,KADyB;EAE7BhC,OAAO,EAAE,CAAC,IAAIe,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AHAXpB,AGF+B,CAAhB,CDEbc,ADFAP,AEAF,GDEK,CAACA,EDFE,CAACC,EDEE,CAACF,AEAP,CDFH,CCEY,OFAd,CAAsBD,YAAtB,GAAqC,YAAW;ACD/C,AEID,CFTA,CDOE,EEAE,ECEEiC,EHFE/B,CEACA,KFAK,CEAV,CCEY,CHFC,CEACA,CCECsB,KDFf,GCEuB,CAACQ,aAAT,CAAuB,aAAvB,CAAnB;IHDI7B,AECA,IFDI,EAAE,AECAkB,MFDM,EECE,GFDGlB,AECA,IFDL,AECSmB,EFFR,kBEEI,CAAyB,KAAKJ,kBAA9B,EAAkD;ACCvEe,IHDI7B,EECEa,GFDG,CGCC,CHDC,AGCAiB,IDAI,ADHApB,EDEE,AECA,CCAjB,GAAqB,CHDCV,AECAa,KFDL,AGCUf,EHHV,IGGgB,CAACQ,UAAP,EAA3B;IHAIb,AEDmE,CAAlD,CAAjB,GFCK,EAAE,KAAKA,KAHC;AGKjB,IDCIwB,ECDEc,MDCM,CAACZ,GCDG,GAAGC,CDCf,CAAiB,KAAKtB,CCDC,CAAC8B,IDCP,CAAYnC,KAA7B,GCDe,CAAuB,aAAvB,CAAnB;IHDI,AEIA2B,IFJInB,IEII,CFJR,AEISoB,GFJG,aEIZ,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;ACFJe,EDGG,IFJG,IGCI,CAACD,EHDE,KAAKrC,AGClB,GAAqB,EHDR,CAAWQ,GGCG,EHDrB;EGEJ,EHDG,CANY,CGOXH,MAAM,CAACL,KAAP,CAAaQ,KAAjB,EAAwB;EDIxBa,ECHEhB,MAAM,CAACW,MAAP,GDGgB,CAACa,OAAD,EAAU;ECF3B,CAFD,CHAE,AEKA,IFLIrB,CGEC,CDGCsB,GFLN,CAAUrB,CEKC,GAAGoB,CFLd,EAAiB,IEKI,CAAC,CAAD,CAArB;IAEA,ACJAxB,EHFE,IEMI0B,ACJA,CHFC/B,AGEAe,IAAP,CHFE,CAAWP,EEME,GFNb,AEMgBsB,GFNGrB,EEME,CAACuB,EFNtB,eEMgB,IAA2B,KAAKZ,SAAlD;ECHD,EHFE;AGGJ,CAND,GDUI,IAAIW,SAAJ,EAAe;EFhBF,CAAf,GEiBI,KAAK1B,MAAL,CAAYC,IAAZ;ACHN,EHFE,EEMG,ACJD,CDEA,EFJGJ,IEMI,GFNT,CAAaQ,OAAb,CAAqBC,AGEA4B,MHFM,GGE7B,CHFiC,CGEC;EAChCA,EHFE5B,EEME,IFNI,CAACC,AEMAP,ACJA,CAACmC,EHFR,CAAWnC,EEMT,CAAYE,GFNd,EEME,ECJJ,CAAwBkC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAkDC,KAAD,IAAW;EHD3D,CAFD,CEQG,ACJDC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AHDH,CAhBD,CEsBG,ACJA,CAFD;AAGD;AHDDhD,EEMEyB,SFNS,CAACnB,SAAZ,CAAsBE,EEME,EFNxB,CEM2B,EFNE,YAAW;EACtC,EEME,GFNGN,GEMG+B,EFNR,CAAWzB,IAAX,EEMiB,GAAGqB,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFLH,CAFD;IEQI,IAAIF,SAAJ,EAAe;AFJnBjC,MEKM,KFLK,AEKAO,CFLCD,KEKN,CAAYE,GFLlB,CAAsBC,AEKhB,KFLN,GAA8B,YAAW;EACvC,EEKG,CAFD,EFHGP,IEKI,CFLT,CAAWO,KAAX;AACD,CAFD,KEOM,KAAKF,MAAL,CAAYE,KAAZ;IACD;AFJLT,EEKG,SFLQ,CAACM,SAAZ,CAAsBS,UAAtB,GAAmC,YAAW;EAC5C,IAAI,KAAKb,KAAL,CAAWc,MAAf,EAAuB;AElCT,IFmCZ,KAAKR,IAAL;EACD,CAFD,MAEO;IACL,KAAKC,KAAL,CEIWW;EFHZ;AACF,CAND;;AAQApB,WAAW,CAACM,SAAZ,CAAsBW,IAAtB,GAA6B,YAAW;EACtC,KAAKf,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACD,CAFD;;AAIAV,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAW;EACxC,KAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACD,CAFD;;eAIeV","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\n  this.media = config.el;\n  this.plugins = config.plugins || [];\n\n  this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function() {\n  const player = {\n    play: () => this.play(),\n    pause: () => this.pause(),\n    media: this.media,\n    get muted() {\n      return this.media.muted;\n    },\n    set muted(value) {\n      this.media.muted = value;\n    },\n  };\n\n  this.plugins.forEach(plugin => {\n    plugin.run(player);\n  });\n};\n\nMediaPlayer.prototype.play = function() {\n  this.media.play();\n};\n\nMediaPlayer.prototype.pause = function() {\n  this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function() {\n  if (this.media.paused) {\n    this.play();\n  } else {\n    this.pause();\n  }\n};\n\nMediaPlayer.prototype.mute = function() {\n  this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function() {\n  this.media.muted = false;\n};\n\nexport default MediaPlayer;\n","function AutoPlay() {}\nAutoPlay.prototype.run = function(player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\n\nexport default AutoPlay;\n","class AutoPause {\n  constructor() {\n    this.threshold = 0.25;\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n  }\n\n  run(player) {\n    this.player = player;\n\n    const observer = new IntersectionObserver(this.handleIntersection, {\n      threshold: this.threshold,\n    });\n\n    observer.observe(this.player.media);\n\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\n  }\n\n  handleIntersection(entries) {\n    const entry = entries[0];\n\n    const isVisible = entry.intersectionRatio >= this.threshold;\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n\n  handleVisibilityChange() {\n    const isVisible = document.visibilityState === 'visible';\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n}\n\nexport default AutoPause;\n","import MediaPlayer from \"./app/MediaPlayer.js\";\nimport AutoPlay from \"./app/plugins/AutoPlay.js\";\nimport AutoPause from \"./app/plugins/AutoPause.js\";\n\nconst video = document.querySelector(\"video\");\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\nconst playButton = document.querySelector(\"#playButton\");\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector(\"#muteButton\");\nmuteButton.onclick = () => {\n  if (player.media.muted) {\n    player.unmute();\n  } else {\n    player.mute();\n  }\n};\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\n    console.log(error.message);\n  });\n}\n"]}